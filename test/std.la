id = (\x.x)

trbool = (\x.\y.x)
flbool = (\x.\y.y)

add = (\a.\b.(+ a b))
sub = (\a.\b.(- a b))
mul = (\a.\b.(* a b))
div = (\a.\b.(/ a b))

equ = (\a.\b.(== a b))

grtr = (\a.\b.(> a b))
less = (\a.\b.(< a b))
gte = (\a.\b.(>= a b))
lte = (\a.\b.(<= a b))

not = (\b. if b then fls else tru)

inc = add 1
dec = (\n.sub n 1)

flip = (\f.\a.\b.f b a)
dec = flip sub 1
dec = (\n.sub n 1)

ass = (\x.(state = x))

square = (\n.mul n n)
cube = (\n.mul (square n) n)

mocking = (\f.f f)
cardinal = (\a.\b.\c.a c b)

ycomb = (\f.(\x.f (x x)) (\x. f (x x)))

fac = (\f.\n. if equ n 0 then 1 else mul n (f f (sub x 1)))

nil